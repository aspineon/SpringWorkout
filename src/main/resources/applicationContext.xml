<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">
	<bean id="clickPrototype" scope="prototype" class="com.springWorkout.domain.Click">
	</bean>
	<bean id="clickSingleton" scope="singleton" class="com.springWorkout.domain.Click">
	</bean>
	<context:component-scan base-package="com.springWorkout.dao"></context:component-scan>
	<context:component-scan base-package="com.springWorkout.service"></context:component-scan>
	<!-- See http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html for details -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.userName}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialSize" value="0"></property>
		<property name="maxActive" value="20"></property>
		<property name="maxIdle" value="3"></property>
		<property name="minIdle" value="0"></property>
		<property name="maxWait" value="5000"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="validationQuery" value="SELECT 1"></property>
		<property name="timeBetweenEvictionRunsMillis" value="60000"></property>
		<property name="minEvictableIdleTimeMillis" value="600000"></property>
		<property name="logAbandoned" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="validationInterval" value="300000" />
		<property name="maxAge" value="3600000" />
	</bean>
	<context:property-placeholder location="classpath:/database.properties" />
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvicePerson">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txAdviceApiLog">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="save*" read-only="false"
				rollback-for="InvalidApiResponseException" propagation="REQUIRES_NEW" />
			<tx:method name="log*" read-only="false"
				rollback-for="InvalidApiResponseException" propagation="REQUIRED" />
			<tx:method name="mandatory*" read-only="false"
				propagation="MANDATORY" />
			<tx:method name="never*" read-only="false"
				propagation="NEVER" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="PersonServiceMethods"
			expression="execution(* com.springWorkout.service.PersonService.*(..))" />
		<aop:pointcut id="ApiLogServiceMethods"
			expression="execution(* com.springWorkout.service.ApiLogService.*(..))" />
		<aop:advisor advice-ref="txAdvicePerson" pointcut-ref="PersonServiceMethods"></aop:advisor>
		<aop:advisor advice-ref="txAdviceApiLog" pointcut-ref="ApiLogServiceMethods"></aop:advisor>
	</aop:config>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven />
	<!-- Settings -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- The list of possible options for hibernate.hbm2ddl.auto property 
					are, -->
				<!-- validate: validate the schema, makes no changes to the database. -->
				<!-- update: update the schema. -->
				<!-- create: creates the schema, destroying previous data. -->
				<!-- create-drop: drop the schema at the end of the session. -->
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="show_sql">false</prop>
				<prop key="hibernate.validator.autoregister_listeners">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.springWorkout.domain</value>
			</list>
		</property>
	</bean>
</beans>